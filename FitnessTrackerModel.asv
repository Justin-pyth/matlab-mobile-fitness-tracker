%Contributors: Kevin, Tenzin, Justin
%Project: Fitness Tracker Model

clear;
close all;
clear;

% Runs the app and stores user input
app = app1();

% Load and assign values from userData struct
load("userData.mat")

weight = userData.weight;
height = userData.height;
age = userData.height;
activityLvl = userData.activityLvl;
gender = userData.gender;

%% Define the folder paths
folderPaths = {'Data/Running'} %, 'Data/Walking', 'Data/Sitting'};

allAccelerations = []; % Initialize an empty array to store all accelerations

%Add labels for running, walking, and standing accelerations
sitLabel = 'sitting';
sitLabel = repmat(sitLabel, size(sitAcceleration, 1), 1);
sitAcceleration.Activity = sitLabel;

walkingLabel = 'walking';
walkingLabel = repmat(walkingLabel, size(walkingAcceleration, 1), 1);
walkingAcceleration.Activity = walkingLabel;

runningLabel = 'running';
runningLabel = repmat(runningLabel, size(runningAcceleration, 1), 1);
runningAcceleration.Activity = runningLabel;
% Loop through each folder to grab all accelerations
for i = 1:length(folderPaths)
    files = dir(fullfile(folderPaths{i}, '*.mat')); % Use curly braces to access cell array elements
    for j = 1:length(files)
        data = load(fullfile(folderPaths{i}, files(j).name)); 
        data = addLabels(data, i); %Add labels
        allAccelerations = [allAccelerations; data.Acceleration] % Concatenate accelerations
    end
end

allAccelerations
%%


%%